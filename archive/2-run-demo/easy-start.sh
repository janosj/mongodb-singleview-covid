# Runs scripts 1, 2, and 3 (ZK, Kafka, and Connect), all in the background.
# Strictly a convenience script, it reduces the number of prep steps to just 1.
# Once everything is running, run start_data_feed.

# Setting allexport causes all variables defined in demo.conf
# to be exported, and thus accessible to subshells.
# Specifically, connect-standalone.sh requires the CLASSPATH.
set -a
source demo.conf

if [ ! -d "$KAFKA_HOME" ]; then
  echo "Kafka not found at $KAFKA_HOME."
  echo "Check that Kafka is installed and KAFKA_HOME is set in demo.conf."
  echo "Exiting."
  exit 1
fi

cd $KAFKA_HOME

echo "About to start ZooKeeper in the background..."
sleep 3
bin/zookeeper-server-start.sh config/zookeeper.properties &
ZK_PID=$!
sleep 8

echo "About to start Kafka in the background..."
sleep 3
bin/kafka-server-start.sh config/server.properties &
KAFKA_PID=$!
sleep 15

echo "About to start Connect in the background..."
sleep 3
bin/connect-standalone.sh config/connect-standalone.properties config/connect-mongodb-sink.properties &
CONNECT_PID=$!
sleep 25

cd -

# Create the stop script
cat <<EOF > easy-stop.sh
# process IDs generated by the last execution of the easy-start.sh script.
echo "Stopping Kafka Connect..."
sleep 3
kill $CONNECT_PID
sleep 6
echo "Stopping Kafka..."
sleep 3
kill $KAFKA_PID
sleep 8
echo "Stopping ZooKeeper..."
sleep 3
kill $ZK_PID
sleep 3
echo "Should be all set."
EOF

echo "Everything should be running, now just run start_data_feed. Good luck!"
echo "To stop these background processes, run easy_stop.sh."
echo


